diff --git a/src/components/dialogs/commons/unique-name-input.tsx b/src/components/dialogs/commons/unique-name-input.tsx
index eba1a7ed..278f143b 100644
--- a/src/components/dialogs/commons/unique-name-input.tsx
+++ b/src/components/dialogs/commons/unique-name-input.tsx
@@ -7,7 +7,7 @@
 
 import { ChangeEvent, FunctionComponent, useCallback, useEffect } from 'react';
 import { ElementType, useDebounce } from '@gridsuite/commons-ui';
-import { elementExists } from 'services/explore';
+import { elementExists, elementExistss } from 'services/explore';
 import { FormattedMessage } from 'react-intl';
 import { InputAdornment, TextFieldProps } from '@mui/material';
 import CheckIcon from '@mui/icons-material/Check';
@@ -51,27 +51,18 @@ export const UniqueNameInput: FunctionComponent<UniqueNameInputProps> = (props)
 
     const handleCheckName = useCallback(
         (value: string) => {
-            if (value && props.activeDirectory) {
-                elementExists(props.activeDirectory, value, props.elementType)
-                    .then((alreadyExist) => {
-                        if (alreadyExist) {
+            if (value  ) {
+                
+                         if (elementExistss( value )) {
                             setError(props.name, {
                                 type: 'validate',
                                 message: 'nameAlreadyUsed',
                             });
                         }
-                    })
-                    .catch((error) => {
-                        setError(props.name, {
-                            type: 'validate',
-                            message: 'nameValidityCheckErrorMsg',
-                        });
-                        console.error(error?.message);
-                    })
-                    .finally(() => {
-                        clearErrors('root.isValidating');
-                    });
-            }
+                   
+                     
+                         clearErrors('root.isValidating');
+             }
         },
         [setError, clearErrors, props.activeDirectory, props.name, props.elementType]
     );
diff --git a/src/components/dialogs/element-creation-dialog.tsx b/src/components/dialogs/element-creation-dialog.tsx
index e800a0ea..669aaa90 100644
--- a/src/components/dialogs/element-creation-dialog.tsx
+++ b/src/components/dialogs/element-creation-dialog.tsx
@@ -1,10 +1,3 @@
-/**
- * Copyright (c) 2024, RTE (http://www.rte-france.com)
- * This Source Code Form is subject to the terms of the Mozilla Public
- * License, v. 2.0. If a copy of the MPL was not distributed with this
- * file, You can obtain one at http://mozilla.org/MPL/2.0/.
- */
-
 import { FormattedMessage, useIntl } from 'react-intl';
 import {
     CustomFormProvider,
@@ -29,7 +22,6 @@ import { AppState } from '../../redux/reducer';
 
 interface FormData {
     [NAME]: string;
-    [DESCRIPTION]: string;
 }
 export interface IElementCreationDialog extends FormData {
     [FOLDER_NAME]: string;
@@ -49,13 +41,11 @@ const formSchema = yup
     .object()
     .shape({
         [NAME]: yup.string().trim().required(),
-        [DESCRIPTION]: yup.string().optional().max(500, 'descriptionLimitError'),
     })
     .required();
 
 const emptyFormData: FormData = {
     [NAME]: '',
-    [DESCRIPTION]: '',
 };
 
 const ElementCreationDialog: React.FC<ElementCreationDialogProps> = ({
@@ -79,9 +69,12 @@ const ElementCreationDialog: React.FC<ElementCreationDialogProps> = ({
     });
     const {
         reset,
+        trigger,
+        setValue, // Added setValue to update specific form fields
         formState: { errors },
+        watch, // To observe changes in form fields
     } = formMethods;
-    const disableSave = Object.keys(errors).length > 0;
+    const disableSave = Object.keys(errors).length > 0 || !watch(NAME); // Disable save if NAME is empty
 
     const clear = useCallback(() => {
         reset(emptyFormData);
@@ -134,9 +127,15 @@ const ElementCreationDialog: React.FC<ElementCreationDialogProps> = ({
     };
 
     const setSelectedFolder = (folder: TreeViewFinderNodeProps[]) => {
-        if (folder?.length > 0 && folder[0].id !== destinationFolder?.id) {
+        if (folder?.length > 0) {
             const { id, name } = folder[0];
             setDestinationFolder({ id, name });
+            console.log('========== ', folder);
+
+            // Prefill the input with the folder name
+            setValue(NAME, name, {
+                shouldDirty: true,
+            });
         }
         setDirectorySelectorOpen(false);
     };
@@ -193,15 +192,12 @@ const ElementCreationDialog: React.FC<ElementCreationDialogProps> = ({
                             autoFocus
                         />
                     </Grid>
-                    <Grid item>
-                        <DescriptionField />
-                    </Grid>
                     {folderChooser}
                 </Grid>
                 <DirectoryItemSelector
                     open={directorySelectorOpen}
                     onClose={setSelectedFolder}
-                    types={[ElementType.DIRECTORY]}
+                    types={[ElementType.CASE]}
                     onlyLeaves={false}
                     multiSelect={false}
                     validationButtonText={intl.formatMessage({
diff --git a/src/components/network/network-map-tab.tsx b/src/components/network/network-map-tab.tsx
index 1ce4cefd..59b1cb92 100644
--- a/src/components/network/network-map-tab.tsx
+++ b/src/components/network/network-map-tab.tsx
@@ -627,7 +627,7 @@ export const NetworkMapTab = ({
         Promise.all([substationPositionsDone, linePositionsDone])
             .then(() => {
                 temporaryGeoDataIdsRef.current = new Set();
-                networkMapRef.current?.resetZoomAndPosition();
+                //networkMapRef.current?.resetZoomAndPosition();
                 // when reloading root node map equipments (when switching of root network), nominal voltages are reloaded
                 // we check them all in NominalVoltageFilter by default
                 if (mapEquipments) {
diff --git a/src/services/explore.ts b/src/services/explore.ts
index 58831c9b..7f20042f 100644
--- a/src/services/explore.ts
+++ b/src/services/explore.ts
@@ -32,7 +32,10 @@ export function createParameter(
         body: JSON.stringify(newParameter),
     });
 }
-
+export function elementExistss( elementName: string ) {
+ 
+    return elementName === "cc";
+}
 export function elementExists(directoryUuid: UUID, elementName: string, type: ElementType) {
     const existsElementUrl = `${PREFIX_DIRECTORY_SERVER_QUERIES}/v1/directories/${directoryUuid}/elements/${elementName}/types/${type}`;
 
