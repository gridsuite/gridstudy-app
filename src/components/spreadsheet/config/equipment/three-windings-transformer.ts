/**
 * Copyright (c) 2021, RTE (http://www.rte-france.com)
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */

import type { SpreadsheetTabDefinition } from '../spreadsheet.type';
import { EQUIPMENT_TYPES } from '../../../utils/equipment-types';
import { typeAndFetchers } from './common-config';
import { COLUMN_TYPES } from 'components/custom-aggrid/custom-aggrid-header.type';

const tab = 'ThreeWindingsTransformers';

export const THREE_WINDINGS_TRANSFORMER_TAB_DEF: SpreadsheetTabDefinition = {
    index: 4,
    name: tab,
    ...typeAndFetchers(EQUIPMENT_TYPES.THREE_WINDINGS_TRANSFORMER),
    columns: [
        {
            id: 'id',
            name: 'ID',
            type: COLUMN_TYPES.TEXT,
            formula: 'id',
            dependencies: [],
        },
        {
            id: 'name',
            name: 'Name',
            type: COLUMN_TYPES.TEXT,
            formula: 'name',
            dependencies: [],
        },
        {
            id: 'country',
            name: 'Country',
            type: COLUMN_TYPES.ENUM,
            formula: 'country',
            dependencies: [],
        },
        {
            id: 'voltageLevelId1',
            name: 'Voltage level ID 1',
            type: COLUMN_TYPES.TEXT,
            formula: 'voltageLevelId1',
            dependencies: [],
        },
        {
            id: 'voltageLevelId2',
            name: 'Voltage level ID 2',
            type: COLUMN_TYPES.TEXT,
            formula: 'voltageLevelId2',
            dependencies: [],
        },
        {
            id: 'voltageLevelId3',
            name: 'Voltage level ID 3',
            type: COLUMN_TYPES.TEXT,
            formula: 'voltageLevelId3',
            dependencies: [],
        },
        {
            id: 'nominalV1',
            name: 'Nominal voltage 1 (kV)',
            type: COLUMN_TYPES.NUMBER,
            formula: 'nominalV1',
            precision: 0,
            dependencies: [],
        },
        {
            id: 'nominalV2',
            name: 'Nominal voltage 2 (kV)',
            type: COLUMN_TYPES.NUMBER,
            formula: 'nominalV2',
            precision: 0,
            dependencies: [],
        },
        {
            id: 'nominalV3',
            name: 'Nominal voltage 3 (kV)',
            type: COLUMN_TYPES.NUMBER,
            formula: 'nominalV3',
            precision: 0,
            dependencies: [],
        },
        {
            id: 'terminal1Connected',
            name: 'Connected 1',
            type: COLUMN_TYPES.BOOLEAN,
            formula: 'terminal1Connected',
            dependencies: [],
        },
        {
            id: 'terminal2Connected',
            name: 'Connected 2',
            type: COLUMN_TYPES.BOOLEAN,
            formula: 'terminal2Connected',
            dependencies: [],
        },
        {
            id: 'terminal3Connected',
            name: 'Connected 3',
            type: COLUMN_TYPES.BOOLEAN,
            formula: 'terminal3Connected',
            dependencies: [],
        },
        {
            id: 'p1',
            name: 'p1 (MW)',
            type: COLUMN_TYPES.NUMBER,
            formula: 'p1',
            precision: 1,
            dependencies: [],
        },
        {
            id: 'p2',
            name: 'p2 (MW)',
            type: COLUMN_TYPES.NUMBER,
            formula: 'p2',
            precision: 1,
            dependencies: [],
        },
        {
            id: 'p3',
            name: 'p3 (MW)',
            type: COLUMN_TYPES.NUMBER,
            formula: 'p3',
            precision: 1,
            dependencies: [],
        },
        {
            id: 'q1',
            name: 'q1 (MVar)',
            type: COLUMN_TYPES.NUMBER,
            formula: 'q1',
            precision: 1,
            dependencies: [],
        },
        {
            id: 'q2',
            name: 'q2 (MVar)',
            type: COLUMN_TYPES.NUMBER,
            formula: 'q2',
            precision: 1,
            dependencies: [],
        },
        {
            id: 'q3',
            name: 'q3 (MVar)',
            type: COLUMN_TYPES.NUMBER,
            formula: 'q3',
            precision: 1,
            dependencies: [],
        },
        {
            id: 'hasLoadTapChanging1Capabilities',
            name: 'Ratio on-load 1',
            type: COLUMN_TYPES.BOOLEAN,
            formula: 'hasLoadTapChanging1Capabilities',
            dependencies: [],
        },
        {
            id: 'isRegulatingRatio1',
            name: 'Ratio regulating 1',
            type: COLUMN_TYPES.BOOLEAN,
            formula: 'isRegulatingRatio1',
            dependencies: [],
        },
        {
            id: 'targetV1',
            name: 'Voltage set point (kV) 1',
            type: COLUMN_TYPES.NUMBER,
            formula: 'targetV1',
            precision: 1,
            dependencies: [],
        },
        {
            id: 'ratioTapChanger1.tapPosition',
            name: 'Ratio tap 1',
            type: COLUMN_TYPES.NUMBER,
            formula: 'ratioTapChanger1.tapPosition',
            precision: 0,
            dependencies: [],
        },
        {
            id: 'hasLoadTapChanging2Capabilities',
            name: 'Ratio on-load 2',
            type: COLUMN_TYPES.BOOLEAN,
            formula: 'hasLoadTapChanging2Capabilities',
            dependencies: [],
        },
        {
            id: 'isRegulatingRatio2',
            name: 'Ratio regulating 2',
            type: COLUMN_TYPES.BOOLEAN,
            formula: 'isRegulatingRatio2',
            dependencies: [],
        },
        {
            id: 'targetV2',
            name: 'Voltage set point (kV) 2',
            type: COLUMN_TYPES.NUMBER,
            formula: 'targetV2',
            precision: 1,
            dependencies: [],
        },
        {
            id: 'ratioTapChanger2.tapPosition',
            name: 'Ratio tap 2',
            type: COLUMN_TYPES.NUMBER,
            formula: 'ratioTapChanger2.tapPosition',
            precision: 0,
            dependencies: [],
        },
        {
            id: 'hasLoadTapChanging3Capabilities',
            name: 'Ratio on-load 3',
            type: COLUMN_TYPES.BOOLEAN,
            formula: 'hasLoadTapChanging3Capabilities',
            dependencies: [],
        },
        {
            id: 'isRegulatingRatio3',
            name: 'Ratio regulating 3',
            type: COLUMN_TYPES.BOOLEAN,
            formula: 'isRegulatingRatio3',
            dependencies: [],
        },
        {
            id: 'targetV3',
            name: 'Voltage set point (kV) 3',
            type: COLUMN_TYPES.NUMBER,
            formula: 'targetV3',
            precision: 1,
            dependencies: [],
        },
        {
            id: 'ratioTapChanger3.tapPosition',
            name: 'Ratio tap 3',
            type: COLUMN_TYPES.NUMBER,
            formula: 'ratioTapChanger3.tapPosition',
            precision: 0,
            dependencies: [],
        },
        {
            id: 'regulationModeName1',
            name: 'Phase regulation mode 1',
            type: COLUMN_TYPES.ENUM,
            formula: 'regulationModeName1',
            dependencies: [],
        },
        {
            id: 'isRegulatingPhase1',
            name: 'Phase regulating 1',
            type: COLUMN_TYPES.BOOLEAN,
            formula: 'isRegulatingPhase1',
            dependencies: [],
        },
        {
            id: 'phaseTapChanger1.tapPosition',
            name: 'Phase tap 1',
            type: COLUMN_TYPES.NUMBER,
            formula: 'phaseTapChanger1.tapPosition',
            precision: 0,
            dependencies: [],
        },
        {
            id: 'regulatingValue1',
            name: 'Current (A) or flow set point (MW) 1',
            type: COLUMN_TYPES.NUMBER,
            formula: 'regulatingValue1',
            precision: 1,
            dependencies: [],
        },
        {
            id: 'regulationModeName2',
            name: 'Phase regulation mode 2',
            type: COLUMN_TYPES.ENUM,
            formula: 'regulationModeName2',
            dependencies: [],
        },
        {
            id: 'isRegulatingPhase2',
            name: 'Phase regulating 2',
            type: COLUMN_TYPES.BOOLEAN,
            formula: 'isRegulatingPhase2',
            dependencies: [],
        },
        {
            id: 'phaseTapChanger2.tapPosition',
            name: 'Phase tap 2',
            type: COLUMN_TYPES.NUMBER,
            formula: 'phaseTapChanger2.tapPosition',
            precision: 0,
            dependencies: [],
        },
        {
            id: 'regulatingValue2',
            name: 'Current (A) or flow set point (MW) 2',
            type: COLUMN_TYPES.NUMBER,
            formula: 'regulatingValue2',
            precision: 1,
            dependencies: [],
        },
        {
            id: 'regulationModeName3',
            name: 'Phase regulation mode 3',
            type: COLUMN_TYPES.ENUM,
            formula: 'regulationModeName3',
            dependencies: [],
        },
        {
            id: 'isRegulatingPhase3',
            name: 'Phase regulating 3',
            type: COLUMN_TYPES.BOOLEAN,
            formula: 'isRegulatingPhase3',
            dependencies: [],
        },
        {
            id: 'phaseTapChanger3.tapPosition',
            name: 'Phase tap 3',
            type: COLUMN_TYPES.NUMBER,
            formula: 'phaseTapChanger3.tapPosition',
            precision: 0,
            dependencies: [],
        },
        {
            id: 'regulatingValue3',
            name: 'Current (A) or flow set point (MW) 3',
            type: COLUMN_TYPES.NUMBER,
            formula: 'regulatingValue3',
            precision: 1,
            dependencies: [],
        },
    ],
};
